/*
 * API Settings
 * At BlueSnap, we look at payments a little differently. Our Payment Orchestration Platform helps businesses accept payments globally and is designed to increase revenue and reduces costs. We provide a comprehensive back-end solutions that simplifies the complexity of payments, managing the full process from start to finish.  BlueSnap supports payments through multiple sales channels such as online and mobile sales, marketplaces, subscriptions, invoice payments and manual orders through a virtual terminal. And for businesses looking for embedded payments, we offer white-labeled payments for platforms with automated underwriting and onboarding that supports marketplaces and split payments.  And with one integration and contract, businesses can sell in over 200 geographies with access to local acquiring in 47 countries, 110+ currencies and 100+ global payment types, including popular eWallets, automated accounts receivable, world-class fraud protection and chargeback management, built-in solutions for regulation and tax compliance, and unified global reporting to help businesses grow.  With a US headquarters in Waltham, MA, and EU headquarters in Dublin, Ireland, BlueSnap is backed by world-class private equity investors including Great Hill Partners and Parthenon Capital Partners.   Learn more at BlueSnap.com
 *
 * The version of the OpenAPI document: 8976-Tools
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PlanCreateRecurringPlanRequest;
import com.konfigthis.client.model.PlanUpdateRecurringPlanRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlanApi
 */
@Disabled
public class PlanApiTest {

    private static PlanApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PlanApi(apiClient);
    }

    /**
     * Create Plan
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRecurringPlanTest() throws ApiException {
        String chargeFrequency = null;
        Integer gracePeriodDays = null;
        Integer trialPeriodDays = null;
        Integer initialChargeAmount = null;
        String name = null;
        String currency = null;
        Integer maxNumberOfCharges = null;
        Float recurringChargeAmount = null;
        Boolean chargeOnPlanSwitch = null;
        api.createRecurringPlan()
                .chargeFrequency(chargeFrequency)
                .gracePeriodDays(gracePeriodDays)
                .trialPeriodDays(trialPeriodDays)
                .initialChargeAmount(initialChargeAmount)
                .name(name)
                .currency(currency)
                .maxNumberOfCharges(maxNumberOfCharges)
                .recurringChargeAmount(recurringChargeAmount)
                .chargeOnPlanSwitch(chargeOnPlanSwitch)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve All Plans
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTest() throws ApiException {
        String pagesize = null;
        String after = null;
        Boolean gettotal = null;
        Boolean fulldescription = null;
        api.getAll()
                .pagesize(pagesize)
                .after(after)
                .gettotal(gettotal)
                .fulldescription(fulldescription)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve Specific Plan
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificTest() throws ApiException {
        Integer planId = null;
        api.getSpecific(planId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update Plan
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRecurringPlanTest() throws ApiException {
        Integer planId = null;
        String chargeFrequency = null;
        String trialPeriodDays = null;
        String initialChargeAmount = null;
        String name = null;
        String currency = null;
        String recurringChargeAmount = null;
        api.updateRecurringPlan(planId)
                .chargeFrequency(chargeFrequency)
                .trialPeriodDays(trialPeriodDays)
                .initialChargeAmount(initialChargeAmount)
                .name(name)
                .currency(currency)
                .recurringChargeAmount(recurringChargeAmount)
                .execute();
        // TODO: test validations
    }

}
