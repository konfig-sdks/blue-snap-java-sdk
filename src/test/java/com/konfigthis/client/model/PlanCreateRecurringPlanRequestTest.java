/*
 * API Settings
 * At BlueSnap, we look at payments a little differently. Our Payment Orchestration Platform helps businesses accept payments globally and is designed to increase revenue and reduces costs. We provide a comprehensive back-end solutions that simplifies the complexity of payments, managing the full process from start to finish.  BlueSnap supports payments through multiple sales channels such as online and mobile sales, marketplaces, subscriptions, invoice payments and manual orders through a virtual terminal. And for businesses looking for embedded payments, we offer white-labeled payments for platforms with automated underwriting and onboarding that supports marketplaces and split payments.  And with one integration and contract, businesses can sell in over 200 geographies with access to local acquiring in 47 countries, 110+ currencies and 100+ global payment types, including popular eWallets, automated accounts receivable, world-class fraud protection and chargeback management, built-in solutions for regulation and tax compliance, and unified global reporting to help businesses grow.  With a US headquarters in Waltham, MA, and EU headquarters in Dublin, Ireland, BlueSnap is backed by world-class private equity investors including Great Hill Partners and Parthenon Capital Partners.   Learn more at BlueSnap.com
 *
 * The version of the OpenAPI document: 8976-Tools
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PlanCreateRecurringPlanRequest
 */
public class PlanCreateRecurringPlanRequestTest {
    private final PlanCreateRecurringPlanRequest model = new PlanCreateRecurringPlanRequest();

    /**
     * Model tests for PlanCreateRecurringPlanRequest
     */
    @Test
    public void testPlanCreateRecurringPlanRequest() {
        // TODO: test PlanCreateRecurringPlanRequest
    }

    /**
     * Test the property 'chargeFrequency'
     */
    @Test
    public void chargeFrequencyTest() {
        // TODO: test chargeFrequency
    }

    /**
     * Test the property 'gracePeriodDays'
     */
    @Test
    public void gracePeriodDaysTest() {
        // TODO: test gracePeriodDays
    }

    /**
     * Test the property 'trialPeriodDays'
     */
    @Test
    public void trialPeriodDaysTest() {
        // TODO: test trialPeriodDays
    }

    /**
     * Test the property 'initialChargeAmount'
     */
    @Test
    public void initialChargeAmountTest() {
        // TODO: test initialChargeAmount
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'maxNumberOfCharges'
     */
    @Test
    public void maxNumberOfChargesTest() {
        // TODO: test maxNumberOfCharges
    }

    /**
     * Test the property 'recurringChargeAmount'
     */
    @Test
    public void recurringChargeAmountTest() {
        // TODO: test recurringChargeAmount
    }

    /**
     * Test the property 'chargeOnPlanSwitch'
     */
    @Test
    public void chargeOnPlanSwitchTest() {
        // TODO: test chargeOnPlanSwitch
    }

}
